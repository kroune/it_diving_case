-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.task_logs
(
    date date NOT NULL,
    is_correct boolean NOT NULL,
    task_id smallint NOT NULL,
    task_number smallint NOT NULL,
    user_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.tasks
(
    task_number smallint NOT NULL,
    task_id bigint NOT NULL,
    task_type smallint NOT NULL,
    task_short_answer character varying(10) COLLATE pg_catalog."default" NOT NULL,
    task_explanation character varying(2000) COLLATE pg_catalog."default",
    task_comments_chat_id bigint,
    likes bigint NOT NULL DEFAULT 0,
    dislikes bigint NOT NULL DEFAULT 0,
    difficulty smallint NOT NULL,
    parent_variant_id bigint
);

CREATE TABLE IF NOT EXISTS public.users
(
    login character varying(20) NOT NULL,
    password character varying(20) NOT NULL,
    user_id bigint NOT NULL,
    user_type smallint NOT NULL DEFAULT 0,
    profile_picture bytea,
    email character varying(20),
    phone_number character varying(20)
);

CREATE TABLE IF NOT EXISTS public.task_progress
(
    user_id bigint NOT NULL,
    task_id bigint NOT NULL,
    current_task_answer character varying(20)
);

CREATE TABLE IF NOT EXISTS public.messages_data
(
    chat_id bigint NOT NULL,
    message_id bigint NOT NULL,
    message_author_id bigint NOT NULL,
    text character varying(1000),
    attachment bytea
);

CREATE TABLE IF NOT EXISTS public.appeals
(
    chat_id bigint NOT NULL,
    creator_id bigint NOT NULL,
    supporter_id bigint,
    status smallint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.ads
(
    ad_id bigint NOT NULL,
    users_number_to_show bigint NOT NULL DEFAULT 0,
    ad_banner bytea,
    ad_link character varying
);

CREATE TABLE IF NOT EXISTS public.variants
(
    variant_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.variants_tasks
(
    variants_variant_id bigint NOT NULL,
    tasks_task_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.task_additional_info
(
    task_id bigint NOT NULL,
    likes bigint NOT NULL DEFAULT 0,
    dislikes bigint NOT NULL DEFAULT 0,
    chat_id bigint NOT NULL
);

ALTER TABLE IF EXISTS public.tasks
    ADD FOREIGN KEY (task_id)
    REFERENCES public.task_logs (task_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tasks
    ADD FOREIGN KEY (task_id)
    REFERENCES public.task_progress (task_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tasks
    ADD FOREIGN KEY (task_number)
    REFERENCES public.task_logs (task_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tasks
    ADD FOREIGN KEY (task_id)
    REFERENCES public.task_additional_info (task_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users
    ADD FOREIGN KEY (user_id)
    REFERENCES public.task_logs (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.task_progress
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.messages_data
    ADD FOREIGN KEY (chat_id)
    REFERENCES public.appeals (chat_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.messages_data
    ADD FOREIGN KEY (chat_id)
    REFERENCES public.tasks (task_comments_chat_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.messages_data
    ADD FOREIGN KEY (message_author_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.messages_data
    ADD FOREIGN KEY (chat_id)
    REFERENCES public.task_additional_info (chat_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.appeals
    ADD FOREIGN KEY (creator_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.variants_tasks
    ADD FOREIGN KEY (variants_variant_id)
    REFERENCES public.variants (variant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.variants_tasks
    ADD FOREIGN KEY (tasks_task_id)
    REFERENCES public.tasks (task_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;